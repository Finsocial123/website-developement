import React, { useEffect, useState } from 'react';
import clsx from 'clsx';

export default function RecentTrades() {
  const [recentTrades, setRecentTrades] = useState([]);

  useEffect(() => {
    async function fetchTrades() {
      try {
        const response = await fetch('https://api.binance.com/api/v3/trades?symbol=BNBUSDT&limit=10');
        const data = await response.json();

        const trades = data.map((trade) => ({
          id: trade.id.toString(), // Ensure ID is a string
          time: new Date(trade.time).toLocaleTimeString('en-US', {
            hour: '2-digit',
            minute: '2-digit',
          }),
          status: trade.isBuyerMaker ? 'complete' : 'pending',
          amount: `${trade.isBuyerMaker ? '+' : '-'}${trade.qty} BNB`, // Fix: Hardcode BNB
        }));
        
        setRecentTrades(trades);
      } catch (error) {
        console.error('Error fetching trades:', error);
      }
    }

    fetchTrades();
  }, []);

  return (
    <div className="flex">
      <div className="flex-1 flex flex-col p-3 rounded-lg border border-indigo-600 hover:border-fuchsia-400 hover:border-3 ring-8-offset hover:scale-80 duration-300 h-[500px] w-[600px]">
        <h3 className="text-lg mb-4">Recent Trading Activities</h3>
        <div className="space-y-3">
          {recentTrades.map((trade) => (
            <div key={`${trade.id}-${trade.time}`} className="flex items-center justify-between text-sm">
              <div className="flex items-center space-x-4">
                <span className="text-gray-400">#{trade.id}</span>
                <span className="text-gray-400">{trade.time}</span>
              </div>
              <div className="flex items-center space-x-4">
                <span
                  className={clsx(
                    "px-2 py-1 rounded text-xs",
                    trade.status === 'complete'
                      ? "bg-green-500/20 text-green-500"
                      : "bg-yellow-500/20 text-yellow-500"
                  )}
                >
                  {trade.status}
                </span>
                <span className={clsx(trade.amount.startsWith('+') ? "text-green-500" : "text-red-500")}>
                  {trade.amount}
                </span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}
